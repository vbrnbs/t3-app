import Head from "next/head";
import { type NextPage } from "next";
import { useUser, SignInButton, SignOutButton } from "@clerk/clerk-react";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CreatePostWizzard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex gap-3 w-full">
      <Image
        className="h-12 w-12 rounded-full"
        src={user.profileImageUrl}
        alt="Profile Image"
        width={56}
        height={56}
        />
      <input placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
    </div>
  )
}

type PostWithUser = RouterOutputs['posts']['getAll'][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="p-4 gap-3 border-b border-slate-200 flex ">
      <Image 
      src={author.profileImageUrl} 
      alt={`@${author.username}'s profile picture`} 
      className="h-12 w-12 rounded-full"
      width={56}
      height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{` â€¢ ${dayjs(post.createdAt).fromNow()} ago`}</span>
        </div>
        <span>{post.content}</span>
      </div>
      
    </div>
  );

}

export default function Home() {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>
  if (!data) return <div>No data</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 p-4">
            {!user.isSignedIn && <div className="flex justify-center" ><SignInButton /></div>}
            {!!user.isSignedIn && <CreatePostWizzard />}
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>

      </main>
    </>
  );
}
